#include "NtQueryInformationProcess32.h"
#include "Hook32.h"

// Debug flag
// Debug object
// Debug port

/*
std::uint32_t WINAPI overwritedNtQueryInformationProcess(IN HANDLE** ProcessHandle,
												ULONG* ProcessInformationClass,
												PVOID* ProcessInformation,
												ULONG* ProcessInformationLength,
												PULONG* ReturnLength) {
	if(*ProcessInformationClass == 0x7 || *ProcessInformationClass == 0x1f) {
		*ProcessInformationClass = 0;
		return 0xBEEEEEEF;
	}

	if(*ProcessInformationClass == 0x1e && *ReturnLength == NULL) {
		auto handlePtr = (HANDLE*)(*ProcessInformation);
		if(handlePtr != NULL) {
			*handlePtr = (void*)NULL;
		}

		return 0xC0000353L;
	}

	if(*ProcessInformationClass == 0x1e && *ReturnLength != NULL) {
		auto handlePtr = (HANDLE*)(*ProcessInformation);
		if(handlePtr != NULL) {
			*handlePtr = (void*)0x4;
		}

		*ProcessInformationLength = 0x4;

		return 0xC0000353L;
	}

	return 0xBEEEEEEF;
}
*/

std::vector<uint8_t> NtQueryInformationProcessShellcodeWithRet = 
{ 
0x55,0x8b,0xec,0x83,0xec,0x08,0x8b,0x45,0x0c,0x83,
0x38,0x07,0x74,0x08,0x8b,0x4d,0x0c,0x83,0x39,0x1f,
0x75,0x10,0x8b,0x55,0x0c,0xc7,0x02,0x00,0x00,0x00,
0x00,0xb8,0xef,0xee,0xee,0xbe,0xeb,0x6a,0x8b,0x45,
0x0c,0x83,0x38,0x1e,0x75,0x26,0x8b,0x4d,0x18,0x83,
0x39,0x00,0x75,0x1e,0x8b,0x55,0x10,0x8b,0x02,0x89,
0x45,0xfc,0x83,0x7d,0xfc,0x00,0x74,0x09,0x8b,0x4d,
0xfc,0xc7,0x01,0x00,0x00,0x00,0x00,0xb8,0x53,0x03,
0x00,0xc0,0xeb,0x3c,0x8b,0x55,0x0c,0x83,0x3a,0x1e,
0x75,0x2f,0x8b,0x45,0x18,0x83,0x38,0x00,0x74,0x27,
0x8b,0x4d,0x10,0x8b,0x11,0x89,0x55,0xf8,0x83,0x7d,
0xf8,0x00,0x74,0x09,0x8b,0x45,0xf8,0xc7,0x00,0x04,
0x00,0x00,0x00,0x8b,0x4d,0x14,0xc7,0x01,0x04,0x00,
0x00,0x00,0xb8,0x53,0x03,0x00,0xc0,0xeb,0x05,0xb8,
0xef,0xee,0xee,0xbe,0x8b,0xe5,0x5d,0xc2,0x14,0x00 
};

NtQueryInformationProcess32::NtQueryInformationProcess32(ProcessManagement32& processManegement32): BaseBypass32(processManegement32) {}

bool NtQueryInformationProcess32::bypass() {
	return overwriteNtQueryInformationProcess();
}

bool NtQueryInformationProcess32::overwriteNtQueryInformationProcess() {
	Hook32 hook32{ m_processManagement };

	return hook32.overwriteFunction("ntdll.dll", "NtQueryInformationProcess", NtQueryInformationProcessShellcodeWithRet, NtQueryInformationProcess_Args);
}